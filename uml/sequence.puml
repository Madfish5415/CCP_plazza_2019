@startuml plazza

actor User

activate stdin
activate Reception
activate Waiter

User -> stdin: Send 3 different pizzas
Reception -> Parser: Get input (IOrder::getInput())
activate Parser
Parser -> stdin: Read the input (std::cin)
stdin --> Parser: Return input (std::string)
return IOrder
deactivate Parser
Reception -> Kitchen: Create Kitchen if any is free (Reception::createKitchen())
activate Kitchen
Kitchen -> Cook: Create the number of cooks allowed (std::list::emplace_back())
activate Cook
Kitchen -> Storage: Create the storage of ingredients (Kitchen::Kitchen())
activate Storage
Kitchen --> Reception: Return the reference to the kitchen
Reception -> Waiter: Send pizza via MQ (Waiter::sendMessage())
Waiter -> Kitchen: Send the message in MQ
Kitchen -> Cook: Send pizza to Cook (Cook::handle())
activate Kitchen
Cook -> Storage: Check if ingredients are available (Storage::hasIngredients())
Storage -> Cook: Boolean (bool)
Cook -> Storage: "Get" the needed ingredients (Storage::removeIngredients())
Storage --> Cook: Return the ingredients
Cook -> Cook: Wait until pizza is cooked
Cook --> Kitchen: Pizza is ready (Kitchen::ready())
deactivate Kitchen
Kitchen --> Waiter: Pizza is ready via MQ
deactivate Kitchen
deactivate Cook
deactivate Storage
Waiter --> Reception: Pizza is ready via MQ
Reception --> User: Order ready



@endumlÃ¦
